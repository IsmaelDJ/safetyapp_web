## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/responses/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the response.'
        required: true
        example: et
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/responses/{id}/quizzes'
    metadata:
      title: 'Get all the answers to the current question'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the response.'
        required: true
        example: assumenda
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/responses/{id}/employees'
    metadata:
      title: 'Get all responses from the current user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the response.'
        required: true
        example: iusto
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      title: 'Display Swagger API page.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Total Safety API</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://localhost/docs/asset/swagger-ui.css?v=d6de32fafed0ea75ef760baa8ebe2bda\">\r\n    <link rel=\"icon\" type=\"image/png\" href=\"https://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"/>\r\n    <link rel=\"icon\" type=\"image/png\" href=\"https://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"/>\r\n    <style>\r\n    html\r\n    {\r\n        box-sizing: border-box;\r\n        overflow: -moz-scrollbars-vertical;\r\n        overflow-y: scroll;\r\n    }\r\n    *,\r\n    *:before,\r\n    *:after\r\n    {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n      margin:0;\r\n      background: #fafafa;\r\n    }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n<div id=\"swagger-ui\"></div>\r\n\r\n<script src=\"https://localhost/docs/asset/swagger-ui-bundle.js?v=e0ae76d9795806abae1f7781d89d4f4b\"></script>\r\n<script src=\"https://localhost/docs/asset/swagger-ui-standalone-preset.js?v=8e0e2470d0530680f6f16c7817337891\"></script>\r\n<script>\r\n    window.onload = function() {\r\n        // Build a system\r\n        const ui = SwaggerUIBundle({\r\n            dom_id: '#swagger-ui',\r\n            url: \"https://localhost/docs/api-docs.json\",\r\n            operationsSorter: null,\r\n            configUrl: null,\r\n            validatorUrl: null,\r\n            oauth2RedirectUrl: \"https://localhost/api/oauth2-callback\",\r\n\r\n            requestInterceptor: function(request) {\r\n                request.headers['X-CSRF-TOKEN'] = '';\r\n                return request;\r\n            },\r\n\r\n            presets: [\r\n                SwaggerUIBundle.presets.apis,\r\n                SwaggerUIStandalonePreset\r\n            ],\r\n\r\n            plugins: [\r\n                SwaggerUIBundle.plugins.DownloadUrl\r\n            ],\r\n\r\n            layout: \"StandaloneLayout\",\r\n            docExpansion : \"none\",\r\n            deepLinking: true,\r\n            filter: true,\r\n            persistAuthorization: \"false\",\r\n\r\n        })\r\n\r\n        window.ui = ui\r\n\r\n            }\r\n</script>\r\n</body>\r\n</html>\r\n"
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      title: 'Display Oauth2 callback pages.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1).replace('?', '&');
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              if (document.readyState !== 'loading') {
                  run();
              } else {
                  document.addEventListener('DOMContentLoaded', function () {
                      run();
                  });
              }
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}/rules'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"category_id":1,"description":"Regle 1","image":"uploads\/20220818130310_rule_image.png","fr":"uploads\/20220818130310_rule_fr.mp3","ar":"uploads\/20220818130310_rule_ar.mp3","ng":"uploads\/20220818130310_rule_ng.mp3","created_at":"2022-08-18T13:03:10.000000Z","updated_at":"2022-08-18T13:03:10.000000Z"},{"id":2,"category_id":1,"description":"Regle 2","image":"uploads\/20220818130404_rule_image.png","fr":"uploads\/20220818130404_rule_fr.mp3","ar":"uploads\/20220818130404_rule_ar.mp3","ng":"uploads\/20220818130404_rule_ng.mp3","created_at":"2022-08-18T13:04:04.000000Z","updated_at":"2022-08-18T13:04:04.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/rules
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"category_id":1,"description":"Regle 1","image":"uploads\/20220818130310_rule_image.png","fr":"uploads\/20220818130310_rule_fr.mp3","ar":"uploads\/20220818130310_rule_ar.mp3","ng":"uploads\/20220818130310_rule_ng.mp3","created_at":"2022-08-18T13:03:10.000000Z","updated_at":"2022-08-18T13:03:10.000000Z"},{"id":2,"category_id":1,"description":"Regle 2","image":"uploads\/20220818130404_rule_image.png","fr":"uploads\/20220818130404_rule_fr.mp3","ar":"uploads\/20220818130404_rule_ar.mp3","ng":"uploads\/20220818130404_rule_ng.mp3","created_at":"2022-08-18T13:04:04.000000Z","updated_at":"2022-08-18T13:04:04.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/rules/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the rule.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"category_id":1,"description":"Regle 1","image":"uploads\/20220818130310_rule_image.png","fr":"uploads\/20220818130310_rule_fr.mp3","ar":"uploads\/20220818130310_rule_ar.mp3","ng":"uploads\/20220818130310_rule_ng.mp3","created_at":"2022-08-18T13:03:10.000000Z","updated_at":"2022-08-18T13:03:10.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/quizzes
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"category_id":1,"description":"kjfjd","image":"uploads\/20220818130554_qz_question_image.png","fr":"uploads\/20220818130554_qz_question_fr.mp3","ar":"uploads\/20220818130554_qz_question_ar.mp3","ng":"uploads\/20220818130554_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T13:05:54.000000Z","updated_at":"2022-08-18T17:26:32.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":2,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131027_qz_question_image.png","fr":"uploads\/20220818131027_qz_question_fr.mp3","ar":"uploads\/20220818131027_qz_question_ar.mp3","ng":"uploads\/20220818131027_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:10:27.000000Z","updated_at":"2022-08-18T17:18:33.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":3,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131259_qz_question_image.png","fr":"uploads\/20220818131259_qz_question_fr.mp3","ar":"uploads\/20220818131259_qz_question_ar.mp3","ng":"uploads\/20220818131259_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:12:59.000000Z","updated_at":"2022-08-18T13:12:59.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":4,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131439_qz_question_image.png","fr":"uploads\/20220818131439_qz_question_fr.mp3","ar":"uploads\/20220818131439_qz_question_ar.mp3","ng":"uploads\/20220818131439_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:14:39.000000Z","updated_at":"2022-08-18T13:14:39.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":5,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131546_qz_question_image.png","fr":"uploads\/20220818131546_qz_question_fr.mp3","ar":"uploads\/20220818131546_qz_question_ar.mp3","ng":"uploads\/20220818131546_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:15:46.000000Z","updated_at":"2022-08-18T13:15:46.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":6,"category_id":1,"description":"description","image":"uploads\/20220818181229_qz_question_image.png","fr":"uploads\/20220818181230_qz_question_fr.mp3","ar":"uploads\/20220818181230_qz_question_ar.mp3","ng":"uploads\/20220818181230_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T18:12:30.000000Z","updated_at":"2022-08-18T18:12:30.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":7,"category_id":1,"description":"rete","image":"uploads\/20220818202217_qz_question_image.png","fr":"uploads\/20220818202217_qz_question_fr.mp3","ar":"uploads\/20220818202217_qz_question_ar.mp3","ng":"uploads\/20220818202217_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T20:22:17.000000Z","updated_at":"2022-08-18T20:22:17.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":8,"category_id":1,"description":"quiz","image":"uploads\/20220818234855_qz_question_image.png","fr":"uploads\/20220818234855_qz_question_fr.mp3","ar":"uploads\/20220818234855_qz_question_ar.mp3","ng":"uploads\/20220818234855_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T23:48:55.000000Z","updated_at":"2022-08-18T23:48:55.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":9,"category_id":1,"description":"essaie","image":"uploads\/20220822081924_qz_question_image.png","fr":"uploads\/20220822081924_rule_fr.mp3","ar":"uploads\/20220822081924_rule_ar.mp3","ng":"uploads\/20220822081924_rule_ng.mp3","correct":1,"created_at":"2022-08-22T08:19:24.000000Z","updated_at":"2022-08-22T08:19:24.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":10,"category_id":1,"description":"essaie","image":"uploads\/20220822081927_qz_question_image.png","fr":"uploads\/20220822081927_rule_fr.mp3","ar":"uploads\/20220822081927_rule_ar.mp3","ng":"uploads\/20220822081927_rule_ng.mp3","correct":1,"created_at":"2022-08-22T08:19:27.000000Z","updated_at":"2022-08-22T08:19:27.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":11,"category_id":1,"description":"essaie","image":"uploads\/20220822084549_qz_question_image.png","fr":"uploads\/20220822084549_rule_fr.mp3","ar":"uploads\/20220822084549_rule_ar.mp3","ng":"uploads\/20220822084549_rule_ng.mp3","correct":1,"created_at":"2022-08-22T08:45:49.000000Z","updated_at":"2022-08-22T08:45:49.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":12,"category_id":1,"description":"essaytgghh","image":"uploads\/20220822084706_qz_question_image.png","fr":"uploads\/20220822084706_rule_fr.mp3","ar":"uploads\/20220822084706_rule_ar.mp3","ng":"uploads\/20220822084706_rule_ng.mp3","correct":1,"created_at":"2022-08-22T08:47:06.000000Z","updated_at":"2022-08-22T08:47:06.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}},{"id":13,"category_id":1,"description":"Essayons encore","image":"uploads\/20220822094238_qz_question_image.png","fr":"uploads\/20220822094238_rule_fr.mp3","ar":"uploads\/20220822094238_rule_ar.mp3","ng":"uploads\/20220822094238_rule_ng.mp3","correct":1,"created_at":"2022-08-22T09:42:38.000000Z","updated_at":"2022-08-22T09:42:38.000000Z","category":{"id":1,"name":"FRV","image":"uploads\/20220818130207_.png","created_at":"2022-08-18T13:02:07.000000Z","updated_at":"2022-08-18T13:02:07.000000Z"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/quizzes/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the quiz.'
        required: true
        example: dignissimos
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/quizzes/{category_id}/category'
    metadata:
      title: 'Show question by rule''s category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: non
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '49'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/responses
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"employee_id":1,"quiz_question_id":1,"correct":1,"created_at":"2022-08-18T13:16:51.000000Z","updated_at":"2022-08-18T13:16:51.000000Z","employee":{"id":1,"contractor_id":1,"name":"Gnandal","phone":"5866662","uid":"6655","password":"7548","created_at":"2022-08-18T13:04:36.000000Z","updated_at":"2022-08-18T13:04:36.000000Z"},"quiz_question":{"id":1,"category_id":1,"description":"kjfjd","image":"uploads\/20220818130554_qz_question_image.png","fr":"uploads\/20220818130554_qz_question_fr.mp3","ar":"uploads\/20220818130554_qz_question_ar.mp3","ng":"uploads\/20220818130554_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T13:05:54.000000Z","updated_at":"2022-08-18T17:26:32.000000Z"}},{"id":2,"employee_id":1,"quiz_question_id":2,"correct":1,"created_at":"2022-08-18T13:17:03.000000Z","updated_at":"2022-08-18T13:17:03.000000Z","employee":{"id":1,"contractor_id":1,"name":"Gnandal","phone":"5866662","uid":"6655","password":"7548","created_at":"2022-08-18T13:04:36.000000Z","updated_at":"2022-08-18T13:04:36.000000Z"},"quiz_question":{"id":2,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131027_qz_question_image.png","fr":"uploads\/20220818131027_qz_question_fr.mp3","ar":"uploads\/20220818131027_qz_question_ar.mp3","ng":"uploads\/20220818131027_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:10:27.000000Z","updated_at":"2022-08-18T17:18:33.000000Z"}},{"id":3,"employee_id":2,"quiz_question_id":1,"correct":1,"created_at":"2022-08-18T13:17:16.000000Z","updated_at":"2022-08-18T13:17:16.000000Z","employee":{"id":2,"contractor_id":1,"name":"Ismael","phone":"5866662","uid":"1808","password":"9816","created_at":"2022-08-18T13:04:54.000000Z","updated_at":"2022-08-18T13:04:54.000000Z"},"quiz_question":{"id":1,"category_id":1,"description":"kjfjd","image":"uploads\/20220818130554_qz_question_image.png","fr":"uploads\/20220818130554_qz_question_fr.mp3","ar":"uploads\/20220818130554_qz_question_ar.mp3","ng":"uploads\/20220818130554_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T13:05:54.000000Z","updated_at":"2022-08-18T17:26:32.000000Z"}},{"id":4,"employee_id":1,"quiz_question_id":4,"correct":1,"created_at":"2022-08-18T13:17:36.000000Z","updated_at":"2022-08-18T13:17:36.000000Z","employee":{"id":1,"contractor_id":1,"name":"Gnandal","phone":"5866662","uid":"6655","password":"7548","created_at":"2022-08-18T13:04:36.000000Z","updated_at":"2022-08-18T13:04:36.000000Z"},"quiz_question":{"id":4,"category_id":1,"description":"Quiz 1","image":"uploads\/20220818131439_qz_question_image.png","fr":"uploads\/20220818131439_qz_question_fr.mp3","ar":"uploads\/20220818131439_qz_question_ar.mp3","ng":"uploads\/20220818131439_qz_question_ng.mp3","correct":0,"created_at":"2022-08-18T13:14:39.000000Z","updated_at":"2022-08-18T13:14:39.000000Z"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '48'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/responses
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/responses/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the response.'
        required: true
        example: iusto
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"employee_id":1,"quiz_question_id":1,"correct":1,"created_at":"2022-08-18T13:16:51.000000Z","updated_at":"2022-08-18T13:16:51.000000Z","employee":{"id":1,"contractor_id":1,"name":"Gnandal","phone":"5866662","uid":"6655","password":"7548","created_at":"2022-08-18T13:04:36.000000Z","updated_at":"2022-08-18T13:04:36.000000Z"},"quiz_question":{"id":1,"category_id":1,"description":"kjfjd","image":"uploads\/20220818130554_qz_question_image.png","fr":"uploads\/20220818130554_qz_question_fr.mp3","ar":"uploads\/20220818130554_qz_question_ar.mp3","ng":"uploads\/20220818130554_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T13:05:54.000000Z","updated_at":"2022-08-18T17:26:32.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/responses/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the response.'
        required: true
        example: eius
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/quizzes/{employee_id}/notanswered'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: et
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"category_id":1,"description":"kjfjd","image":"uploads\/20220818130554_qz_question_image.png","fr":"uploads\/20220818130554_qz_question_fr.mp3","ar":"uploads\/20220818130554_qz_question_ar.mp3","ng":"uploads\/20220818130554_qz_question_ng.mp3","correct":1,"created_at":"2022-08-18T13:05:54.000000Z","updated_at":"2022-08-18T17:26:32.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
